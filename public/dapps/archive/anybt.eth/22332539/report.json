{
  "version": 2,
  "contentHash": "bafybeifc4qxbfptakdq67u5l45cezp4ikofpqj4tt2cawyynlwodpzghjq",
  "timestamp": 1745423806,
  "blockNumber": 22332539,
  "rootMimeType": "inode/directory",
  "totalSize": 3874304,
  "favicon": "",
  "title": "AnyBT",
  "distributionPurity": {
    "externalScripts": [],
    "externalMedia": []
  },
  "networkingPurity": [
    {
      "file": "index-b289f123.js",
      "occurences": [
        {
          "method": "fetch",
          "urls": [
            "i.href"
          ],
          "library": "polyfill",
          "type": "self",
          "motivation": "This `fetch` call is part of a module preload polyfill. It fetches JavaScript module files specified in `<link rel=\"modulepreload\">` tags. The `i.href` variable holds the dynamic URL of the module being preloaded relative to the current origin."
        },
        {
          "method": "axios.get",
          "urls": [
            "https://gateway.magnode.ru/*"
          ],
          "library": "axios",
          "type": "auxiliary",
          "motivation": "The code defines a wrapper class `VO` around `axios`. Its `get` method calls `this.axios.get(r, {params: n})`, where `r` is constructed using `this.computeEndpoint(t)` which prepends `this.baseURL`. The `baseURL` defaults to `https://gateway.magnode.ru` (`q0`). This indicates GET requests to various paths under that domain."
        },
        {
          "method": "axios.post",
          "urls": [
            "https://gateway.magnode.ru/v1/sql/query"
          ],
          "library": "axios",
          "type": "auxiliary",
          "motivation": "The wrapper class `VO` also has `post` and `postRaw` methods calling `this.axios.post`. Specifically, the `GO` class uses `this.apiRequester.post(a, l, i)` where `a` is `/v1/sql/query`, making POST requests to `https://gateway.magnode.ru/v1/sql/query` (the default `baseURL` is `https://gateway.magnode.ru`). Data is passed as the second argument (`l`)."
        },
        {
          "method": "Image.src",
          "urls": [
            "https://gateway.magnode.ru/tk.gif"
          ],
          "library": "va (Custom Tracker)",
          "type": "auxiliary",
          "motivation": "The custom tracking class `va` sends tracking data by setting the `src` attribute of a new `Image` object: `o.src=\\`${this.gateway}/tk.gif?${i}\\``. The `gateway` defaults to `https://gateway.magnode.ru` (`q0`). This is a common image beacon tracking technique."
        }
      ]
    }
  ],
  "libraryUsage": [
    {
      "file": "index-44e9cf22.js",
      "occurences": [
        {
          "name": "React",
          "motivation": "The code imports `r as z` (likely `React`), `j as De` (likely `jsx`), `b as E` (likely `jsxs`) from `./index-b289f123.js`, and uses React hooks like `z.useRef`, `z.useState`, `z.useEffect`. JSX syntax is used extensively (e.g., `De(\"div\", ...)`)."
        },
        {
          "name": "React Router DOM",
          "motivation": "The code imports `u as xs` (likely `useParams`) and `a as Ws` (likely `useNavigate`) from `./index-b289f123.js`. It calls `xs()` to get route parameters (`qe`) and `Ws()` to get the navigation function (`Fs`)."
        },
        {
          "name": "moment.js",
          "motivation": "The code imports `u` from the bundled file (`./index-b289f123.js`), which is then used extensively with the signature `u(...)` for date/time formatting (e.g., `u(Number(S==null?void 0:S.create_time)*1e3).format(\"HH:mm MMM DD, YYYY\")`). The header comment `//! moment.js` and version `2.30.1` are present in the code."
        },
        {
          "name": "Ant Design",
          "motivation": "The code imports components like `I as Ls` (likely `Spin`), `F as Us` (likely `Button`), `B as Ft` (likely `Tag`) from `./index-b289f123.js`. These components are used with corresponding class names or props (e.g., `E(Ls,{})`, `E(Us,{...})`, `E(Ft,{className:\"following-tag\"...})`)."
        },
        {
          "name": "Internal API Client/Helper",
          "motivation": "The code imports `M as Ns` from `./index-b289f123.js`, creates an instance `Ps=new Ns`, and calls `Ps.getPostById(qe)`. This suggests `Ns` is a class or module dedicated to interacting with an application-specific backend API, likely wrapping actual network calls."
        }
      ]
    },
    {
      "file": "index-b289f123.js",
      "occurences": [
        {
          "name": "React",
          "motivation": "The code uses React's core functionalities like `u.createElement`, `u.createContext`, `u.Component`, `u.useState`, `u.useEffect`, `u.useRef`, `u.useCallback`, `u.useMemo`, `u.useLayoutEffect`, and references React-specific symbols like `Symbol.for(\"react.element\")`."
        },
        {
          "name": "React DOM",
          "motivation": "The code imports and uses functions like `md.createRoot` and `md.hydrateRoot` from the React DOM library (`ro=T2.exports` which exports `qn` containing React DOM functionalities)."
        },
        {
          "name": "React Router",
          "motivation": "The code includes routing logic with functions like `bC` (createRouter) and `eS` (createBrowserRouter) and components/contexts like `GC` (Router) and `_C` (renderMatches), characteristic of `@remix-run/router` or `react-router-dom` v6+."
        },
        {
          "name": "axios",
          "motivation": "The code defines a class `VO` that wraps `axios` (`UO`) for making HTTP requests (`this.axios.get`, `this.axios.post`). The axios library itself (`Ln=r8(_O);Ln.Axios=iu;...`) is bundled within the code (`K0.exports`)."
        },
        {
          "name": "tinycolor2",
          "motivation": "The code includes a class `If` (`var If=function(){...}();`) with methods like `toHsv`, `toHslString`, `toHexString`, `lighten`, `darken`, `mix`, `spin`, which are characteristic of the tinycolor2 library for color manipulation."
        },
        {
          "name": "localForage",
          "motivation": "The code includes the localForage library (`/*! localForage -- Offline Storage, Improved ... */`) within `o8.exports` and assigns it to `oL`, indicating its use for client-side storage."
        },
        {
          "name": "fontfaceobserver",
          "motivation": "The code includes a class exported via `jw.exports` that matches the structure and methods (e.g., `load`, `family`, `style`, `weight`) of the FontFaceObserver library used for font loading detection."
        },
        {
          "name": "classnames",
          "motivation": "The code includes the 'classnames' library utility function (`/*! Copyright (c) 2018 Jed Watson. ... http://jedwatson.github.io/classnames */`) within `a3.exports` (assigned to `hx` and used via `Te`) for conditionally joining class names."
        },
        {
          "name": "async-validator",
          "motivation": "The code defines a `Yl` class with methods like `validate`, `messages`, and `define`, and references default validation messages (`bh`), which is characteristic of the `async-validator` library used for data validation."
        },
        {
          "name": "rc-field-form",
          "motivation": "The code uses components like `FormProvider`, `Field` (`T3`), `List` (`qb`) and hooks like `useForm` (`L3`) and `useWatch` (`Xb`) from `rc-field-form` (assigned to `Gl`)."
        },
        {
          "name": "rc-select",
          "motivation": "The code bundles `rc-select` (`const Wf=Bc;...Bc.Option=z0;Bc.OptGroup=_0;`), a React Select component."
        },
        {
          "name": "rc-trigger",
          "motivation": "The code includes the `rc-trigger` component (`var aN=oN(oP);`) used for handling popups and dropdowns."
        },
        {
          "name": "rc-spin",
          "motivation": "The code defines and uses a Spin component (`Mw=Aw;`) characteristic of `rc-spin` for loading indicators."
        },
        {
          "name": "rc-dialog",
          "motivation": "The code includes `rc-dialog` functionality (`const _r=Pw; _r.useModal=dF; _r.info=...`) for creating modals."
        },
        {
          "name": "rc-input",
          "motivation": "The code uses `rc-input` components (`const Bg=ns; ns.Group=vI; ns.Search=OI; ...`) for input fields, including variants like Search, TextArea, and Password."
        },
        {
          "name": "rc-tag",
          "motivation": "The code includes the `rc-tag` component (`const Wa=hw; hw.CheckableTag=DT;`) for displaying tags."
        },
        {
          "name": "rc-drawer",
          "motivation": "The code defines and uses a Drawer component (`eI=function(t){...}`) characteristic of `rc-drawer`."
        },
        {
          "name": "rc-motion",
          "motivation": "The code uses `CSSMotion` (`Yr=LA(N6)`) and `CSSMotionList` (`VA=UA(N6)`), which are part of the `rc-motion` library for animations."
        },
        {
          "name": "rc-notification",
          "motivation": "The code includes the `rc-notification` component (`ua=function(e){...};ua.newInstance=...`) for displaying notifications."
        },
        {
          "name": "rc-virtual-list",
          "motivation": "The code uses `rc-virtual-list` (`const Z5=u.forwardRef($N);Z5.displayName=\"List\";`) for efficiently rendering long lists."
        },
        {
          "name": "rc-affix",
          "motivation": "The code includes the `rc-affix` component (`const y5=kM;...u.createElement(Ic,...)`) for affixing elements to the viewport."
        },
        {
          "name": "rc-overflow",
          "motivation": "The code uses the `rc-overflow` component (`es=u.forwardRef(QM);es.displayName=\"Overflow\";es.Item=R5;`) for handling overflowing items."
        },
        {
          "name": "Buffer",
          "motivation": "The code includes a polyfill for the Node.js Buffer module (`fv={};...window.Buffer=fv.Buffer;`) to provide Buffer functionality in the browser."
        }
      ]
    }
  ],
  "urls": [],
  "ethereum": [],
  "fallbacks": []
}