{
  "version": 2,
  "contentHash": "bafybeigq6ejbgwr2v2pz4p3cxjqafom7sy4s7u5qzk56ykyoupkkrg4vie",
  "timestamp": 1745429041,
  "blockNumber": 22332539,
  "rootMimeType": "inode/directory",
  "totalSize": 3552153,
  "favicon": "favicon.ico",
  "title": "Unipeer",
  "distributionPurity": {
    "externalScripts": [
      {
        "file": "404.html",
        "occurences": [
          {
            "type": "link",
            "url": "https://fonts.gstatic.com"
          }
        ]
      },
      {
        "file": "aml_kyc_policy.html",
        "occurences": [
          {
            "type": "link",
            "url": "https://fonts.gstatic.com"
          }
        ]
      },
      {
        "file": "index.html",
        "occurences": [
          {
            "type": "script",
            "url": "https://plausible.8bitlabs.tech/js/script.js"
          },
          {
            "type": "link",
            "url": "https://fonts.gstatic.com"
          }
        ]
      },
      {
        "file": "privacy.html",
        "occurences": [
          {
            "type": "link",
            "url": "https://fonts.gstatic.com"
          }
        ]
      },
      {
        "file": "terms.html",
        "occurences": [
          {
            "type": "link",
            "url": "https://fonts.gstatic.com"
          }
        ]
      }
    ],
    "externalMedia": []
  },
  "networkingPurity": [
    {
      "file": "_next/static/chunks/main-955a42f2e4411ce1.js",
      "occurences": [
        {
          "method": "fetch",
          "urls": [
            "/_next/*.css"
          ],
          "library": "Next.js",
          "type": "self",
          "motivation": "The code in module `8418` (specifically function `r` nested within `createRouteLoader`) fetches CSS files. It determines the URLs by looking up entries in the `__BUILD_MANIFEST` which typically contain paths like `_next/static/css/...css`. This is part of Next.js's mechanism for loading CSS chunks dynamically."
        },
        {
          "method": "fetch",
          "urls": [
            "/_next/data/<build_id>/*.json"
          ],
          "library": "Next.js",
          "type": "self",
          "motivation": "The code in module `983` (specifically function `Q` called by `getRouteInfo`) uses `fetch` to get page data. The URL is constructed using `pageLoader.getDataHref`, resulting in paths like `/_next/data/<buildId>/page.json`. This request includes the `x-nextjs-data: 1` header, identifying it as a Next.js data request used for fetching results from `getServerSideProps` or `getStaticProps` during client-side navigation."
        }
      ]
    }
  ],
  "libraryUsage": [
    {
      "file": "_next/static/chunks/04b52e96-c6177b57cd97e344.js",
      "occurences": [
        {
          "name": "Webpack",
          "motivation": "The code uses the `self.webpackChunk_N_E` structure, which is characteristic of code bundled by Webpack, commonly used in Next.js applications (`_N_E` often signifies Next.js). It manages module loading and dependencies."
        }
      ]
    },
    {
      "file": "_next/static/chunks/232-a9c2b0a4e0609942.js",
      "occurences": [
        {
          "name": "React",
          "motivation": "The code extensively uses functions like `r.createElement`, `r.createContext`, `r.useRef`, `r.useState`, `r.useEffect`, `r.useCallback`, `r.useMemo`, `r.useContext`, `r.forwardRef`, `r.Fragment`, `r.cloneElement`, `r.isValidElement`, where `r` is likely the imported React module. These are core React APIs for creating components, managing state, and handling lifecycle."
        },
        {
          "name": "Headless UI",
          "motivation": "The code defines and uses components named `Transition`, `Transition.Child`, `Transition.Root`. It utilizes concepts like `OpenClosedContext`, `NestingContext`, `TransitionContext`, and references `data-headlessui-state`. Functions like `(0,i.yV)` (likely `createReactComponent`), `(0,i.sY)` (likely `render`), `(0,l.oJ)` (likely `useOpenClosed`), `(0,l.up)` (likely `OpenClosedProvider`) are indicative of Headless UI's internal structure and its Transition component logic (`@headlessui/react`)."
        },
        {
          "name": "react-icons",
          "motivation": "The code contains functions (`s`, `c`, `u`) that construct SVG elements dynamically (`r.createElement(\"svg\", ...)`). Specifically, the pattern `function s(e){return function(t){return r.createElement(c,a({attr:a({},e.attr)},t),u(e.child))}}` is characteristic of how react-icons generates icon components. It also uses `r.createContext` to manage icon context (`l=r.createContext&&r.createContext(i)`), similar to `react-icons`' `IconContext`."
        }
      ]
    },
    {
      "file": "_next/static/chunks/28cc4a40-1b7ecaea3938d8fe.js",
      "occurences": [
        {
          "name": "Webpack",
          "motivation": "The code uses the `self.webpackChunk_N_E.push` structure, which is the standard way Webpack uses to load asynchronous chunks of code."
        },
        {
          "name": "SVG Icon Rendering Helper",
          "motivation": "The code defines a function `a` that utilizes `(0, u.w_)` to create an SVG element. This function takes configuration including tag (`svg`), attributes (`viewBox`), and child path data (`path`). This strongly suggests a helper function or library dedicated to rendering SVG icons based on configuration objects, although the specific library name (`u`) isn't clear from the snippet."
        }
      ]
    },
    {
      "file": "_next/static/chunks/framework-b3ca2e9a9574e304.js",
      "occurences": [
        {
          "name": "React",
          "motivation": "The code contains numerous references to React core concepts and APIs, such as `React.Component`, `Symbol.for(\"react.element\")`, `useState`, `useEffect`, `useRef`, `useCallback`, `useContext`, `createElement`, `createRef`, `forwardRef`, `lazy`, `memo`, component lifecycle logic (`componentDidMount`, `componentWillUnmount`, etc.), hooks dispatcher logic (`k.ReactCurrentDispatcher`, `fo.current=null===e||null===e.memoizedState?uu:iu`), and React-specific internal objects like `k.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED`."
        },
        {
          "name": "ReactDOM",
          "motivation": "The code includes functions specific to ReactDOM for interacting with the DOM, such as `createRoot`, `hydrateRoot`, `findDOMNode`, `createPortal`, `unmountComponentAtNode`, and `flushSync`. It references the renderer package name explicitly: `rendererPackageName:\"react-dom\"`. It also manages DOM properties, event listeners (`addEventListener`, `onClick`, etc.), and hydration logic (`hydrate`, `hydrateRoot`) specifically for rendering React components into the DOM."
        },
        {
          "name": "Webpack",
          "motivation": "The code is wrapped in a Webpack chunk loading function `(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[774],{...}])`. This structure is standard for how Webpack bundles and loads JavaScript modules, particularly the `_N_E` suggests it might be part of a Next.js application build."
        },
        {
          "name": "scheduler",
          "motivation": "The code imports and uses functions from the `scheduler` package (likely React's internal scheduler), such as `l.unstable_scheduleCallback`, `l.unstable_cancelCallback`, `l.unstable_shouldYield`, `l.unstable_now`, `l.unstable_getCurrentPriorityLevel`, and various priority levels (`Je`, `en`, `nn`, `tn`, `rn`). These are used for cooperative scheduling of React updates."
        }
      ]
    },
    {
      "file": "_next/static/chunks/main-955a42f2e4411ce1.js",
      "occurences": [
        {
          "name": "Next.js",
          "motivation": "The code is bundled in a `_next/static/chunks/main-*.js` file, which is the standard structure for Next.js applications. It heavily utilizes Next.js specific features like routing (`createRouter`, `useRouter`, `next/router`), data fetching (`__NEXT_DATA__`, `/_next/data/`), page loading (`pageLoader`), head management (`HeadManagerContext`, `updateHead`), image optimization (`ImageConfigContext`, `/_next/image`), script loading (`next/script`, `handleClientScriptLoad`), and internal modules (`@next`). The webpack bootstrapping code (`self.webpackChunk_N_E`) is also characteristic of Next.js builds."
        },
        {
          "name": "React",
          "motivation": "The code extensively uses React patterns and APIs, such as `createElement` (often aliased, e.g., `h.default.createElement`), `Component` (`h.default.Component`), Hooks (`useState`, `useEffect`, `useLayoutEffect`, `useContext`, `useRef`), `createContext`, and `StrictMode`. Next.js is built on top of React."
        },
        {
          "name": "web-vitals",
          "motivation": "The code includes functions like `onCLS`, `onFID`, `onFCP`, `onLCP`, `onTTFB`, `onINP` (found within module `3640`) and mentions `reportWebVitals` (in module `7589`). This indicates the integration of the `web-vitals` library for performance monitoring, which is a common practice in Next.js applications."
        },
        {
          "name": "Webpack",
          "motivation": "The code starts with the Webpack bootstrapping code `(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push(...)` and uses Webpack's module loading system (`e`, `t`, `r` arguments in functions, `e.exports`). Next.js uses Webpack as its default bundler."
        }
      ]
    },
    {
      "file": "_next/static/chunks/pages/_app-1174530c3fd990e1.js",
      "occurences": [
        {
          "name": "Next.js",
          "motivation": "The code includes `window.__NEXT_P=window.__NEXT_P||[]).push([\"/_app\", ...])` and uses the variable `_N_E`, which are conventions specific to the Next.js framework for page handling and hydration."
        },
        {
          "name": "React",
          "motivation": "The code uses `(0,u.jsx)(e, ...)` which indicates the use of JSX, a syntax extension for JavaScript commonly used with React. Next.js is built on top of React."
        },
        {
          "name": "Webpack",
          "motivation": "The code structure `(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push(...)` is characteristic of Webpack's module bundling and code splitting mechanism, often used by frameworks like Next.js."
        }
      ]
    },
    {
      "file": "_next/static/chunks/pages/_error-07bd32f56c3416e6.js",
      "occurences": [
        {
          "name": "Webpack",
          "motivation": "The code uses `self.webpackChunk_N_E` and `n.O`, which are conventions used by the Webpack module bundler for managing code chunks and runtime operations."
        },
        {
          "name": "Next.js",
          "motivation": "The code uses `window.__NEXT_P`, a global array used by Next.js to push page components. The filename `_next/static/chunks/pages/_error-....js` also indicates a Next.js project structure, specifically for the error page."
        }
      ]
    },
    {
      "file": "_next/static/chunks/pages/aml_kyc_policy-5cf05019a297eedc.js",
      "occurences": [
        {
          "name": "Next.js",
          "motivation": "```javascript\n(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push(...)\n(window.__NEXT_P=window.__NEXT_P||[]).push([\"/aml_kyc_policy\",function(){return i(5925)}])\n```\nThis pattern indicates a Next.js application structure and page loading mechanism. The file path `_next/static/chunks/...` is also characteristic of Next.js builds."
        },
        {
          "name": "React",
          "motivation": "```javascript\nvar n=i(1527),a=i(959),o=i(8494);\nvar e=(0,a.useState)(!1);\nreturn(0,n.jsxs)(\"div\",{...})\nreturn(0,n.jsx)(\"img\",{...})\n```\nThe code utilizes JSX syntax (`(0,n.jsx)`, `(0,n.jsxs)`) which is transpiled JavaScript for React components, and React hooks like `useState` (`(0,a.useState)`)."
        },
        {
          "name": "Tailwind CSS",
          "motivation": "```javascript\nclassName:\"bg-[#020423] w-full px-6 py-16 flex flex-col justify-center items-start md:items-center\"\nclassName:\"font-Inter px-2 font-medium text-base text-white-500 transition duration-150 ease-in-out\"\n```\nThe code extensively uses utility classes within the `className` prop (e.g., `bg-[#020423]`, `w-full`, `flex`, `flex-col`, `font-Inter`, `text-base`) which is the standard way of applying styles in Tailwind CSS."
        },
        {
          "name": "react-icons (or similar icon library)",
          "motivation": "```javascript\nvar n=i(1527),a=i(9751),o=i(7814);\n// ...\n(0,n.jsx)(o.meP,{className:\" text-white p-2 w-10 h-10 text-2xl md:text-2xl\"})\n(0,n.jsx)(a.AGi,{className:\" text-white p-2 w-10 h-10 text-2xl md:text-2xl\"})\n(0,n.jsx)(o.rFR,{className:\" text-white p-2 w-10 h-10 text-2xl md:text-2xl\"})\n```\nThe code imports modules (`i(9751)`, `i(7814)`) and uses specific properties (`meP`, `AGi`, `rFR`) as components within JSX, likely representing icons (Twitter, Telegram, GitHub based on context). This pattern is common for icon libraries like `react-icons`."
        },
        {
          "name": "Headless UI (or similar transition library)",
          "motivation": "```javascript\nvar n=i(1527),a=i(959),o=i(8494);\n// ...\n(0,n.jsx)(o.u,{show:t,enter:\"transition-opacity duration-75\",enterFrom:\"opacity-0\",enterTo:\"opacity-100\",leave:\"transition-opacity duration-150\",leaveFrom:\"opacity-100\",leaveTo:\"opacity-0\",children:function(e){/*...*/}})\n```\nThe code uses a component (`o.u`, likely imported from `i(8494)`) with props like `show`, `enter`, `enterFrom`, `enterTo`, `leave`, `leaveFrom`, `leaveTo`. This strongly matches the API of the `Transition` component from `@headlessui/react`, commonly used for animations and transitions in React applications, especially those using Tailwind CSS."
        }
      ]
    },
    {
      "file": "_next/static/chunks/pages/index-600b0a0f58e904ff.js",
      "occurences": [
        {
          "name": "React",
          "motivation": "The code utilizes JSX syntax (`(0,n.jsx)`, `(0,n.jsxs)`) extensively for defining UI components. It also employs core React hooks like `useState` (`(0,r.useState)` from `s(959)`), `useRef`, `useEffect`, `useReducer`, `useContext`, `createContext`, and `useMemo`, which are fundamental parts of the React library."
        },
        {
          "name": "Next.js",
          "motivation": "The presence of the webpack chunk structure `(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push(...)` is characteristic of Next.js builds. Additionally, the code imports and uses `next/head` (identified as `m()` from `s(6867)` -> `s(7322)`) to manage elements in the HTML `<head>`, specifically for adding a title and a script tag."
        },
        {
          "name": "Headless UI",
          "motivation": "The code implements UI patterns like Disclosure (FAQ section using `K`, `K.Button`, `K.Panel` derived from modules `s(6234)` to `s(5387)`) and Transition (mobile menu using `a.u` from `s(8494)` with props like `show`, `enter`, `leave`). These components and patterns are hallmarks of the Headless UI library."
        },
        {
          "name": "react-icons",
          "motivation": "The code includes components like `r.AGi` (from `s(9751)`), `a.meP`, and `a.rFR` (from `s(7814)`) which are rendered as icons (Telegram, Twitter, GitHub based on surrounding `<a>` tags). This pattern of importing and using components for specific icons strongly suggests the use of the `react-icons` library."
        }
      ]
    },
    {
      "file": "_next/static/chunks/pages/privacy-7ec02f41955b9e49.js",
      "occurences": [
        {
          "name": "React",
          "motivation": "The code extensively uses `(0,r.jsxs)` and `(0,r.jsx)` which are common minified forms of React's JSX runtime functions (`jsx` and `jsxs`). Additionally, the use of `(0,s.useState)` in module `959` is a clear indicator of React Hooks."
        },
        {
          "name": "Next.js",
          "motivation": "The code structure `(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push(...)` is characteristic of Webpack bundles generated by Next.js. The presence of `window.__NEXT_P` further confirms that this is part of a Next.js application, specifically handling page data."
        },
        {
          "name": "Headless UI (or similar transition library)",
          "motivation": "Module `8494` uses a component pattern `(0,r.jsx)(n.u, {show: t, enter:..., enterFrom:..., enterTo:..., leave:..., leaveFrom:..., leaveTo:...})`. This structure, especially the props like `show`, `enter*`, `leave*`, strongly resembles the `Transition` component from Headless UI, used for managing element transitions."
        },
        {
          "name": "react-icons (or similar icon library)",
          "motivation": "Modules `7814` and `9751` import and use components like `n.meP`, `n.rFR`, and `s.AGi`. These are rendered within the footer section alongside links to Twitter, Telegram, and GitHub, suggesting they are icon components. `react-icons` is a popular library for this purpose in React projects."
        }
      ]
    },
    {
      "file": "_next/static/chunks/pages/terms-99003f530cc020cf.js",
      "occurences": [
        {
          "name": "React",
          "motivation": "The code uses `(0,a.jsx)` and `(0,a.jsxs)` which are transpiled JSX syntax characteristic of React. It also explicitly uses React hooks like `(0,r.useState)`."
        },
        {
          "name": "Next.js",
          "motivation": "The code includes `(window.__NEXT_P=window.__NEXT_P||[]).push([\"/terms\",...])`, which is the standard way Next.js registers page components. The file path `_next/static/chunks/pages/terms-...` also indicates a Next.js build structure."
        },
        {
          "name": "React Icons",
          "motivation": "The code imports and uses specific icon components like `(0,i.meP)`, `(0,r.AGi)`, and `(0,i.rFR)` within the footer section for social media links (Twitter, Telegram, Github). This pattern is typical of icon libraries like `react-icons`."
        },
        {
          "name": "Headless UI (or similar transition library)",
          "motivation": "The code uses a component `(0,i.u)` with props like `show`, `enter`, `enterFrom`, `enterTo`, `leave`, `leaveFrom`, `leaveTo`. This API is characteristic of the Transition component from Headless UI, often used for managing UI element transitions, especially in conjunction with Tailwind CSS (which is suggested by the className syntax)."
        }
      ]
    },
    {
      "file": "_next/static/chunks/polyfills-c67a75d1b6f99dc8.js",
      "occurences": [
        {
          "name": "core-js",
          "motivation": "```markdown\nThe code contains the string `__core-js_shared__` and includes a copyright notice `© 2020 Denis Pushkarev (zloirock.ru)`, which is associated with the core-js library. Numerous polyfills for modern JavaScript features (like `Promise`, `Map`, `Set`, `Symbol`, `Array.prototype.find`, `Object.assign`, etc.) are present, characteristic of core-js.\n```"
        },
        {
          "name": "fetch polyfill",
          "motivation": "```markdown\nThe code defines `fetch`, `Headers`, `Request`, and `Response` objects if they are not natively available (`self.fetch||(self.fetch=_l,self.Headers=xl,self.Request=Tl,self.Response=Ll)`). The implementation (`_l` function) uses `XMLHttpRequest` internally to mimic `fetch` behavior, which is a standard approach for fetch polyfills.\n```"
        },
        {
          "name": "URL/URLSearchParams polyfill",
          "motivation": "```markdown\nThe code includes extensive logic for parsing and manipulating URLs and URL search parameters, defining `URL` and `URLSearchParams` constructors and their methods (`Pc=function(t){...}`, `ys=function(){...}`). It checks for native support and provides polyfills if necessary (`Cu=!o(function(){...})`, `Lt({global:!0,forced:!Cu},{URLSearchParams:ys})`, `Lt({global:!0,forced:!Cu,sham:!i},{URL:Pc})`).\n```"
        }
      ]
    },
    {
      "file": "_next/static/chunks/webpack-fd1bc4a65a80e5c8.js",
      "occurences": [
        {
          "name": "Webpack",
          "motivation": "The code implements a module loading system with functions like `n` (similar to `__webpack_require__`), `n.m` (modules), `n.O` (runtime chunk loading), `n.n` (esModule interop), `n.t` (create namespace object), `n.d` (define property getters), `n.o` (hasOwnProperty), `n.r` (define __esModule), and `n.p` (public path). It also references `self.webpackChunk_N_E`, which is the default chunk name format for Webpack builds, particularly in Next.js."
        },
        {
          "name": "Next.js (likely)",
          "motivation": "The specific chunk name `webpackChunk_N_E` and the public path `n.p=\"/_next/\"` strongly suggest that this Webpack runtime code is part of a Next.js application build."
        }
      ]
    }
  ],
  "urls": [],
  "ethereum": [],
  "fallbacks": []
}