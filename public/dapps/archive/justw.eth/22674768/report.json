{
  "version": 2,
  "contentHash": "bafybeierjchshtzzc3dc4nz552bgphxmxcdue7qftvmhqddycqr64g4wym",
  "timestamp": 1749566323,
  "blockNumber": 22674768,
  "rootMimeType": "inode/directory",
  "totalSize": 4323477,
  "favicon": "favicon.webp",
  "title": "Just (un)wrap ether",
  "distributionPurity": {
    "externalScripts": [],
    "externalMedia": []
  },
  "networkingPurity": [
    {
      "file": "index.28ec0165baeb7d11ded8.js",
      "occurences": [
        {
          "method": "fetch",
          "urls": [
            "<URL_FROM_DS_RPC_1_QUERY_PARAM>"
          ],
          "library": "viem",
          "type": "rpc",
          "motivation": "The script attempts to read a URL from the 'ds-rpc-1' query parameter using `new URLSearchParams(window.location.search).get(\"ds-rpc-1\")`. If this URL is present, it's used to configure a `viem` `http` transport (e.g., via `(0,s.L)(n)` where `n` is the URL and `s.L` is likely `viem/http`). Viem's `http` transport internally uses `fetch` to make JSON-RPC requests to the provided URL for Ethereum blockchain interactions. This URL is treated as an RPC endpoint."
        }
      ]
    }
  ],
  "libraryUsage": [
    {
      "file": "index.28ec0165baeb7d11ded8.js",
      "occurences": [
        {
          "name": "EventEmitter (vendored/polyfilled)",
          "motivation": "The code includes a module (identified by `37007`) that is a direct implementation of the Node.js `EventEmitter` class. This is used for creating and managing custom events within the application, typical for handling asynchronous operations or component communication."
        },
        {
          "name": "viem",
          "motivation": "The code extensively uses functions characteristic of `viem`, a TypeScript interface for Ethereum. This includes `createPublicClient` (obfuscated, e.g., `(0,r.F)`), transport creators like `http` (obfuscated, e.g., `(0,s.L)`), `custom` (obfuscated, e.g., `(0,i.I)`), and `fallback` (obfuscated, e.g., `(0,a.Np)`), contract interaction utilities like `getContract` (obfuscated, e.g., `(0,l.PF)`), chain definitions (e.g., `mainnet` as `d.r`), and utility functions like `parseEther` and `formatEther` (obfuscated, e.g., `(0,u.g)`, `(0,c.c)`). These are used for interacting with the Ethereum blockchain, fetching balances, and sending transactions."
        },
        {
          "name": "@safe-global/safe-apps-provider",
          "motivation": "The code initializes and uses components for interacting with a Gnosis Safe environment. This is indicated by the instantiation of `SafeConnector` (obfuscated as `new f.Ay` from module `r(58109)`) and `SafeAppProvider` (obfuscated as `new h.U` from module `r(16482)`). These are used to detect if the dApp is running in a Safe and to use the Safe as a signer/provider."
        }
      ]
    },
    {
      "file": "vendor.ox.0f7c46dcfbf797352900.js",
      "occurences": [
        {
          "name": "ox.js",
          "motivation": "- The code explicitly defines a version `0.1.1` (in chunk `3119`) which is then used to set a version property like `ox@0.1.1` on error objects (e.g., in `BaseError` definition in chunk `87560`: `value:`ox@${(0,r.getVersion)()}`).\n- Numerous error messages and class names are structured in a way that suggests modules of a larger library, e.g., `Hex.IntegerOutOfRangeError`, `Bytes.InvalidBytesTypeError`, `AbiItem.NotFoundError`. These are frequently associated with an \"ox\" namespace or convention (e.g., `Object.defineProperty(this,\"name\",{enumerable:!0,configurable:!0,writable:!0,value:\"Hex.InvalidHexTypeError\"})`).\n- The URL `https://oxlib.sh` is referenced in `BaseError` definitions (e.g., chunk `27521`, `87560`), likely pointing to the library's documentation or homepage.\n- The filename of the provided script (`vendor.ox.0f7c46dcfbf797352900.js`) strongly indicates that \"ox\" is a vendored library.\n- The library provides a comprehensive suite of functionalities essential for Ethereum development, visible across multiple chunks:\n    - Hexadecimal and byte array manipulation (e.g., `fromHex`, `toBytes`, `padLeft`, `concat` found in chunks like `1999`, `19274`, `43516`, `63076`).\n    - ABI encoding and decoding for smart contract interaction (e.g., `decodeParameter`, `encodeData`, `formatAbiItem` from chunks like `92037`, `98609`, `2565`, `69495`, `76580`).\n    - Cryptographic hash functions (e.g., `keccak256`, `sha256`, `ripemd160` in chunk `60347`, also used by `18772`).\n    - Ethereum address validation, checksumming, and manipulation (e.g., `Address.InvalidAddressError`, `checksum` from chunks `67179`, `71184`).\n    - Custom BigInt serialization/deserialization for JSON (using `#__bigint` suffix, seen in chunk `15665`)."
        }
      ]
    }
  ],
  "urls": [],
  "ethereum": [
    {
      "file": "index.28ec0165baeb7d11ded8.js",
      "occurences": [
        {
          "count": 4
        }
      ]
    }
  ],
  "fallbacks": [
    {
      "file": "index.28ec0165baeb7d11ded8.js",
      "occurences": [
        {
          "type": "rpc",
          "motivation": "The script includes logic to parse the `ds-rpc-1` query parameter using `new URLSearchParams(window.location.search).get(\"ds-rpc-1\")`. The retrieved URL, if present, is used to configure an RPC endpoint for the `viem` client. This serves as a fallback or user-specified RPC provider, particularly when the application is not operating within a Gnosis Safe context or if `window.ethereum` is not the primary available option for transport."
        }
      ]
    }
  ]
}